' @ipa
@startuml
!include base.puml

title Kommunikationsablauf - Zulu (Beispiel Projektor)

actor "Informatik"          as it
actor "Lehrer/Dozent"       as teacher
participant "Webserver"     as server
participant "Zulu"          as mcu
participant "Projektor"     as projector

== Anfrage des Lehrers ==
|||

teacher -> server:          "Starte Projektor"
activate server

server --> server:          Authentifizierung,\nAutorisierung,\nLogging, etc.
server -> it:               "Lehrer XYZ mÃ¶chte den Projektor starten."
note left:                  Via WebSocket\nPubSub

|||
== REST-Request an Zulu und Validierung dessen Antwort ==
|||

server -> mcu:              REST-Anfrage auf\n""/status.xml?KeyDown=__**{id}**__""\num Anfrage abzusetzen.
activate mcu
mcu -> projector:           Anfrage per RS232.
activate projector
projector --> projector:    Projektor wird gestartet.
mcu -> server:              Antwort mit Wartezeit.
destroy mcu

server --> server:          Validierung der Antwort,\nWartezeit abwarten.

|||
== Anfrage des aktuellen Status der Zulu ==
|||

server -> mcu:              REST-Anfrage auf ""/elements.xml""\num Status nachzufragen.
activate mcu
mcu -> server:              Antwort des Statuses.
destroy mcu

server --> server:          Validierung des Status\n und Aufbereitung in ein\nanderes Format.

|||
== Antwort mit Status an relevante Aktoren ==
|||

server -> it:               "Aktueller Status der Zulu XYZ"
note left:                  Via WebSocket\nPubSub

server -> teacher:          Antwort mit aktuellem Status
destroy server


@enduml
